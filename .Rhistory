plot(tps)
# Plotting PCA and colouring by species
mpca <- geomorph::gm.prcomp(tps$coords, scale.=T)
summary(mpca)
# Plotting PCA - variability across species is much less clearly defined as
# compared to shellshaper results
p2 <- mpca$x %>%
as.data.frame() %>%
ggplot() +
# geom_hline(aes(yintercept=0), linetype='dashed') +
# geom_vline(aes(xintercept=0), linetype='dashed') +
geom_point(aes(x = Comp1, y=Comp2,
colour=interacvec[rownames(mpca$x)],
shape=interacvec[rownames(mpca$x)])) +
scale_color_viridis_d() +
labs(colour='Factor', shape='Factor') +
ggnewscale::new_scale_color() +
stat_ellipse(aes(x = Comp1, y=Comp2,
colour=specvec[rownames(mpca$x)]),
show.legend=F) +
scale_color_manual(values=c('darkgrey', 'darkgrey')) +
# scale_color_brewer(palette = 'Accent') +
theme_shape() +
labs(x='PC1: 24.09%', y='PC2: 15.57%')
# Plotting PCA - variability across species is much less clearly defined as
# compared to shellshaper results
p2 <- mpca$x %>%
as.data.frame() %>%
ggplot() +
# geom_hline(aes(yintercept=0), linetype='dashed') +
# geom_vline(aes(xintercept=0), linetype='dashed') +
geom_point(aes(x = Comp1, y=Comp2,
colour=interacvec[rownames(mpca$x)],
shape=interacvec[rownames(mpca$x)])) +
scale_color_viridis_d() +
labs(colour='Factor', shape='Factor') +
ggnewscale::new_scale_color() +
stat_ellipse(aes(x = Comp1, y=Comp2,
colour=specvec[rownames(mpca$x)]),
show.legend=F) +
scale_color_manual(values=c('darkgrey', 'darkgrey')) +
# scale_color_brewer(palette = 'Accent') +
theme_shape() +
labs(x='PC1: 24.09%', y='PC2: 15.57%')
p2
# Getting the reference (mean shape)
ref<-mshape(tps$coords)
# Getting the mean shape for each group of our main factors
get_mean_shape <- function(level){
mshape(tps$coords[,,idvec[idvec %in% names(interacvec[interacvec == level])]])
}
gp1_mn<-get_mean_shape('Exposed.Littorea')
gp2_mn<-get_mean_shape('Sheltered.Littorea')
gp3_mn<-get_mean_shape('Exposed.Saxatilis')
gp4_mn<-get_mean_shape('Sheltered.Saxatilis')
plotRefToTarget(ref, gp3_mn, mag=6, method='points',
links=define.sliders(10:29)[,2:3]
)
# Setting a magnification magnitude to highlight differences relative to mean
magnif <- 6
# Setting a magnification magnitude to highlight differences relative to mean
magnif <- 6
plotRefToTarget(ref, gp1_mn, mag=magnif, method='points',
links=define.sliders(10:29)[,2:3]
)
plotRefToTarget(ref, gp2_mn, mag=magnif, method='points',
links=define.sliders(10:29)[,2:3]
)
plotRefToTarget(ref, gp3_mn, mag=magnif, method='points',
links=define.sliders(10:29)[,2:3]
)
plotRefToTarget(ref, gp4_mn, mag=magnif, method='points',
links=define.sliders(10:29)[,2:3])
# Creating a geomorph data frame for exploring differences across factors
gdf <- geomorph.data.frame(tps, species=specvec[idvec],
site=sitevec[idvec],
tide=tidevec[idvec])
# Creating a geomorph data frame for exploring differences across factors
gdf <- geomorph.data.frame(tps, species=specvec[idvec],
site=sitevec[idvec],
tide=tidevec[idvec])
library(vegan)
# Creating dataframe of coordinate variables
distdf <- map_dfr(1:dim(gdf$coords)[3], ~{
x <- t(gdf$coords[,,.x])[1,] %>% setNames(paste0(1:29, '_x'))
y <- t(gdf$coords[,,.x])[2,] %>% setNames(paste0(1:29, '_y'))
c(x, y)
})
# ==== Libraries ====
library(geomorph)
library(readr)
library(dplyr)
library(stringr)
library(ggplot2)
library(purrr)
library(vegan)
# Landmarks from the TPS file
landmarks <- readmulti.tps('data/landmarks/all_landmarks.TPS', specID='imageID',
negNA=T, readcurves=T)
# Image descriptions to get factor levels
imgs <- read_csv('data/image-reference.csv') %>%
mutate(new_name = str_remove_all(new_name, '\\.JPG'))
# Filtering out samples that were low-tide, since we didn't have a balance
# enough sample set to make an adquate comparison with these data
rmids <- imgs %>%
filter(!is.na(found)) %>%
filter(tidal_height == 'Low') %>%
pull(new_name)
imgs <- imgs %>%
filter(!tidal_height == 'Low')
# Removing landmarks with these IDs
landmarks <- landmarks[, , (!names(landmarks[1,1,]) %in% rmids)]
# Custom theme for plots
theme_shape <- function(size=12, font='serif'){
theme_minimal(base_size=size, base_family = font) +
theme(plot.background = element_rect(fill='white', colour=NULL))
}
# Index vector for species per id
specvec <- setNames(imgs$species, imgs$new_name)
# Index vector for site per id
sitevec <- setNames(imgs$site, imgs$new_name)
# Index vector for the interaction (species and sites per id)
interacvec <- setNames(interaction(imgs$site, imgs$species), imgs$new_name)
# Index vector for tidal gradient
tidevec <- setNames(imgs$tidal_height, imgs$new_name)
# Aligning landmark data using GPA
tps <- gpagen(landmarks,
curves=define.sliders(10:29),
print.progress = T,
ProcD = T,
Proj=T)
# Getting the order of ids as a vector - useful for later indexing environmental
# factors in the right order
idvec <- tps$coords[1,1,] %>% names()
# Plotting the average shape and variability post-alignment
plot(tps)
# Computing PCA of shape variable
mpca <- geomorph::gm.prcomp(tps$coords, scale.=T)
summary(mpca)
# Plotting PCA - variability across species is much less clearly defined as
# compared to shellshaper results
p2 <- mpca$x %>%
as.data.frame() %>%
ggplot() +
geom_point(aes(x = Comp1, y=Comp2,
colour=interacvec[rownames(mpca$x)],
shape=interacvec[rownames(mpca$x)])) +
scale_color_viridis_d() +
labs(colour='Factor', shape='Factor') +
ggnewscale::new_scale_color() +
stat_ellipse(aes(x = Comp1, y=Comp2,
colour=specvec[rownames(mpca$x)]),
show.legend=F) +
scale_color_manual(values=c('darkgrey', 'darkgrey')) +
theme_shape() +
labs(x='PC1: 24.09%', y='PC2: 15.57%')
ggsave(paste0('output/tps_full_pca.png'), width=7, height=3.5, dpi=300, scale=1.1)
# Getting the reference (mean shape)
ref <- mshape(tps$coords)
# Getting the mean shape for each group of our main factors
get_mean_shape <- function(level){
mshape(tps$coords[,,idvec[idvec %in% names(interacvec[interacvec == level])]])
}
gp1_mn<-get_mean_shape('Exposed.Littorea')
gp2_mn<-get_mean_shape('Sheltered.Littorea')
gp3_mn<-get_mean_shape('Exposed.Saxatilis')
gp4_mn<-get_mean_shape('Sheltered.Saxatilis')
# Plotting all mean shapes relative to the reference mean shape - first the
# general landmark variability
png(paste0(plot_dir, '/tps-mean-shapes/landmarks_distribution.png'),
width=7, height=5, units = 'in',
res = 150)
plot(tps)
dev.off()
plot(tps)
# Setting a magnification magnitude to highlight differences relative to mean
magnif <- 6
# Exposed littorea
png(paste0(plot_dir, '/tps-mean-shapes/exposed_littorea.png'),
width=7, height=5, units = 'in',
res = 150)
plotRefToTarget(ref, gp1_mn, mag=magnif, method='points',
links=define.sliders(10:29)[,2:3]
)
dev.off()
# Sheltered Littorea
png(paste0(plot_dir, '/tps-mean-shapes/sheltered_littorea.png'),
width=7, height=5, units = 'in',
res = 150)
plotRefToTarget(ref, gp2_mn, mag=magnif, method='points',
links=define.sliders(10:29)[,2:3]
)
dev.off()
# Exposed saxatilies
png(paste0(plot_dir, '/tps-mean-shapes/exposed_saxatilis.png'),
width=7, height=5, units = 'in',
res = 150)
# output folder for plots
plot_dir <- 'output'
paste0(plot_dir, '/tps_full_pca.png')
# Plotting PCA - variability across species is much less clearly defined as
# compared to shellshaper results
p2 <- mpca$x %>%
as.data.frame() %>%
ggplot() +
geom_point(aes(x = Comp1, y=Comp2,
colour=interacvec[rownames(mpca$x)],
shape=interacvec[rownames(mpca$x)])) +
scale_color_viridis_d() +
labs(colour='Factor', shape='Factor') +
ggnewscale::new_scale_color() +
stat_ellipse(aes(x = Comp1, y=Comp2,
colour=specvec[rownames(mpca$x)]),
show.legend=F) +
scale_color_manual(values=c('darkgrey', 'darkgrey')) +
theme_shape() +
labs(x='PC1: 24.09%', y='PC2: 15.57%')
ggsave(paste0(plot_dir, '/tps_full_pca.png'), width=7, height=3.5, dpi=300, scale=1.1)
# Getting the reference (mean shape)
ref <- mshape(tps$coords)
# Getting the mean shape for each group of our main factors
get_mean_shape <- function(level){
mshape(tps$coords[,,idvec[idvec %in% names(interacvec[interacvec == level])]])
}
gp1_mn<-get_mean_shape('Exposed.Littorea')
gp2_mn<-get_mean_shape('Sheltered.Littorea')
gp3_mn<-get_mean_shape('Exposed.Saxatilis')
gp4_mn<-get_mean_shape('Sheltered.Saxatilis')
# Plotting all mean shapes relative to the reference mean shape - first the
# general landmark variability
png(paste0(plot_dir, '/tps-mean-shapes/landmarks_distribution.png'),
width=7, height=5, units = 'in',
res = 150)
plot(tps)
dev.off()
# Setting a magnification magnitude to highlight differences relative to mean
magnif <- 6
# Exposed littorea
png(paste0(plot_dir, '/tps-mean-shapes/exposed_littorea.png'),
width=7, height=5, units = 'in',
res = 150)
plotRefToTarget(ref, gp1_mn, mag=magnif, method='points',
links=define.sliders(10:29)[,2:3]
)
dev.off()
# Sheltered Littorea
png(paste0(plot_dir, '/tps-mean-shapes/sheltered_littorea.png'),
width=7, height=5, units = 'in',
res = 150)
plotRefToTarget(ref, gp2_mn, mag=magnif, method='points',
links=define.sliders(10:29)[,2:3]
)
dev.off()
# Exposed saxatilies
png(paste0(plot_dir, '/tps-mean-shapes/exposed_saxatilis.png'),
width=7, height=5, units = 'in',
res = 150)
plotRefToTarget(ref, gp3_mn, mag=magnif, method='points',
links=define.sliders(10:29)[,2:3]
)
dev.off()
# Sheltered saxatilis
png(paste0(plot_dir, '/tps-mean-shapes/sheltered_saxatilis.png'),
width=7, height=5, units = 'in',
res = 150)
plotRefToTarget(ref, gp4_mn, mag=magnif, method='points',
links=define.sliders(10:29)[,2:3])
dev.off()
# Creating a geomorph data frame for exploring differences across factors
gdf <- geomorph.data.frame(tps, species=specvec[idvec],
site=sitevec[idvec],
tide=tidevec[idvec])
# Performing the procrustes manova to analyze shape variation - nothing in the
# tide variables is significant, so we can drop this factor
m0 <- procD.lm(f1 = coords ~ site + species + tide +
site*species + site*tide + tide*species +
site*tide*species,
data=gdf, int.first = T)
summary(m0)
# Reduced model produces a significant result for all main and interaction
# factors, consistent with the findings from shellshaper
m1 <- procD.lm(f1 = coords ~ site + species + site*species,
data=gdf, int.first = T)
summary(m1)
# Creating dataframe of coordinate variables
distdf <- map_dfr(1:dim(gdf$coords)[3], ~{
x <- t(gdf$coords[,,.x])[1,] %>% setNames(paste0(1:29, '_x'))
y <- t(gdf$coords[,,.x])[2,] %>% setNames(paste0(1:29, '_y'))
c(x, y)
})
# Computing the euclidean distance matrix
dmx <- dist(distdf)
# Calcualting beta disperson
mod <- betadisper(dmx, group=gdf$site)
mod <- betadisper(dmx, group=gdf$species)
mod <- betadisper(dmx, group=gdf$tide)
mod <- betadisper(dmx, group=interaction(gdf$species, gdf$site))
# Calcualting beta disperson
mod <- betadisper(dmx, group=gdf$site)
# Perform significance test on dispersion, based on distances to centroid
anova(mod)
mod <- betadisper(dmx, group=gdf$species)
# Perform significance test on dispersion, based on distances to centroid
anova(mod)
mod <- betadisper(dmx, group=gdf$tide)
# Perform significance test on dispersion, based on distances to centroid
anova(mod)
mod <- betadisper(dmx, group=interaction(gdf$species, gdf$site))
# Perform significance test on dispersion, based on distances to centroid
anova(mod)
# output folder for plots
plot_dir <- 'output/bias-analysis'
dir.create(plot_dir)
# ==== Libraries ====
library(readr)
# ==== Libraries ====
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
# output folder for plots
plot_dir <- 'output/bias-analysis'
dir.create(plot_dir)
# Reading results from independently classified sample images
p1 <- read_csv('data/bias-test/parameters-saeesh.txt') %>%
mutate(person = 'Saeesh')
p2 <- read_csv('data/bias-test/parameters-gabs.txt') %>%
mutate(person = 'Gabs')
# Joining to 1 table, named by person.
params <- bind_rows(p1, p2)
# Distributions of all params split by person - helps visualize potentially
# consistent bias
p1 <- params %>%
pivot_longer(gw:scaleFactor, names_to='var', values_to = 'value') %>%
ggplot() +
geom_boxplot(aes(y=value, x=person), colour='darkgrey', alpha=0.8, show.legend=F) +
geom_jitter(aes(y=value, x =person, colour=snailID), size=2, alpha=0.5, width=0.5,
show.legend=F) +
theme_shape() +
facet_wrap(facets='var', scales = 'free_y') +
labs(x=NULL, y=NULL, title='Distribution of scored results per person')
# output folder for plots
plot_dir <- 'output/bias-analysis'
dir.create(plot_dir)
# Custom theme for plots
theme_shape <- function(size=12, font='serif'){
theme_minimal(base_size=size, base_family = font) +
theme(plot.background = element_rect(fill='white', colour=NULL))
}
# Reading results from independently classified sample images
p1 <- read_csv('data/bias-test/parameters-saeesh.txt') %>%
mutate(person = 'Saeesh')
p2 <- read_csv('data/bias-test/parameters-gabs.txt') %>%
mutate(person = 'Gabs')
# Joining to 1 table, named by person.
params <- bind_rows(p1, p2)
# Distributions of all params split by person - helps visualize potentially
# consistent bias
p1 <- params %>%
pivot_longer(gw:scaleFactor, names_to='var', values_to = 'value') %>%
ggplot() +
geom_boxplot(aes(y=value, x=person), colour='darkgrey', alpha=0.8, show.legend=F) +
geom_jitter(aes(y=value, x =person, colour=snailID), size=2, alpha=0.5, width=0.5,
show.legend=F) +
theme_shape() +
facet_wrap(facets='var', scales = 'free_y') +
labs(x=NULL, y=NULL, title='Distribution of scored results per person')
ggsave(file.path(plot_dir, 'bias-point-plot.png'), width=7, height=6, dpi=300)
ggsave(file.path(plot_dir, 'bias-point-plot.png'), width=7, height=6, dpi=300, scale=0.9)
ggsave(file.path(plot_dir, 'bias-point-plot.png'), width=7, height=6, dpi=300, scale=1.2)
# Distributions of all params split by person - helps visualize potentially
# consistent bias
p1 <- params %>%
pivot_longer(gw:scaleFactor, names_to='var', values_to = 'value') %>%
ggplot() +
geom_boxplot(aes(y=value, x=person), colour='darkgrey', alpha=0.8, show.legend=F) +
geom_jitter(aes(y=value, x =person, colour=snailID), size=2, alpha=0.5, width=0.5,
show.legend=F) +
theme_shape() +
facet_wrap(facets='var', scales = 'free_y') +
labs(x=NULL, y=NULL, title='Scored results by person')
ggsave(file.path(plot_dir, 'bias-point-plot.png'), width=7, height=6, dpi=300, scale=1.2)
# Reading results from independently classified sample images
p1 <- read_csv('data/bias-test/parameters-saeesh.txt') %>%
mutate(person = 'Saeesh')
p2 <- read_csv('data/bias-test/parameters-gabs.txt') %>%
mutate(person = 'Gabriel')
# Joining to 1 table, named by person.
params <- bind_rows(p1, p2)
# Distributions of all params split by person - helps visualize potentially
# consistent bias
p1 <- params %>%
pivot_longer(gw:scaleFactor, names_to='var', values_to = 'value') %>%
ggplot() +
geom_boxplot(aes(y=value, x=person), colour='darkgrey', alpha=0.8, show.legend=F) +
geom_jitter(aes(y=value, x =person, colour=snailID), size=2, alpha=0.5, width=0.5,
show.legend=F) +
theme_shape() +
facet_wrap(facets='var', scales = 'free_y') +
labs(x=NULL, y=NULL, title='Scored results by person')
ggsave(file.path(plot_dir, 'bias-point-plot.png'), width=7, height=6, dpi=300, scale=1.2)
# Calculating pairwise differences in our assigned values for each image
diff_tab <- params %>%
pivot_longer(gw:scaleFactor, names_to='var', values_to = 'value') %>%
# Grouping by variable and snailID, so each group is just a table of 2 rows
# with one value from each of me and Gabs
group_by(var, snailID) %>%
group_modify(~{
# Getting both values
vals <- .x$value
# Absolute difference
diff <- vals[1] - vals[2]
# Relative difference (i.e difference as a proportion of the original
# magnitude of the data, represented by the starting point of the
# difference)
relv_diff <- diff/vals[1]
# Adding both difference back to the original table
.x %>%
mutate(diff = diff, relv_diff = relv_diff) %>%
dplyr::select(person, value, diff, relv_diff)
}) %>%
ungroup()
# plotting distribution of relative differences - overall pretty well centered
# at 0
p2 <- diff_tab %>%
dplyr::select(-person, -value) %>%
distinct() %>%
ggplot(aes(y = relv_diff, x = var, colour=var)) +
geom_hline(aes(yintercept=0), linetype='dashed', alpha=0.6) +
geom_boxplot(fill=NA) +
geom_jitter(alpha=0.6) +
theme_shape() +
guides(colour='none') +
labs(x = NULL, y=NULL, title='Distribution of % differences')
ggsave(file.path(plot_dir, 'bias-reltv_diffs.png'), width=7, height=6, dpi=300, scale=1.2)
# plotting distribution of relative differences - overall pretty well centered
# at 0
p2 <- diff_tab %>%
dplyr::select(-person, -value) %>%
distinct() %>%
ggplot(aes(y = relv_diff, x = var, colour=var)) +
geom_hline(aes(yintercept=0), linetype='dashed', alpha=0.6) +
geom_boxplot(fill=NA) +
geom_jitter(alpha=0.6) +
theme_shape() +
guides(colour='none') +
labs(x = NULL, y=NULL, title='Distribution of % differences')
p2
ggsave(file.path(plot_dir, 'bias-reltv-diffs.png'), width=7, height=6, dpi=300, scale=1.2)
?ggsave
# plotting distribution of relative differences - overall pretty well centered
# at 0
p2 <- diff_tab %>%
dplyr::select(-person, -value) %>%
distinct() %>%
ggplot(aes(y = relv_diff, x = var, colour=var)) +
geom_hline(aes(yintercept=0), linetype='dashed', alpha=0.6) +
geom_boxplot(fill=NA) +
geom_jitter(alpha=0.6) +
theme_shape() +
guides(colour='none') +
labs(x = NULL, y=NULL, title='Distribution of % differences')
ggsave(file.path(plot_dir, 'bias-reltv-diffs.png'), plot=p2,
width=7, height=5, dpi=300, scale=1.2)
library(patchwork)
# Creating a combined mosaic to synthesize both results
mosaic <- p1/p2 + plot_layout(heights = c(2,1))
ggsave(file.path(plot_dir, 'bias-analysis.png'), plot=mosaic,
width=7, height=7, dpi=300, scale=1.2)
# Creating a combined mosaic to synthesize both results
mosaic <- p1/p2 + plot_layout(heights = c(2,1)) +
theme(plot.background = element_rect(fill='white', colour=NA))
ggsave(file.path(plot_dir, 'bias-analysis.png'), plot=mosaic,
width=7, height=7, dpi=300, scale=1.2)
theme_minimal(base_size=size, base_family = font) +
theme(plot.background = element_rect(fill='white', colour=NA))
# Custom theme for plots
theme_shape <- function(size=12, font='serif'){
theme_minimal(base_size=size, base_family = font) +
theme(plot.background = element_rect(fill='white', colour=NA))
}
# Distributions of all params split by person - helps visualize potentially
# consistent bias
p1 <- params %>%
pivot_longer(gw:scaleFactor, names_to='var', values_to = 'value') %>%
ggplot() +
geom_boxplot(aes(y=value, x=person), colour='darkgrey', alpha=0.8, show.legend=F) +
geom_jitter(aes(y=value, x =person, colour=snailID), size=2, alpha=0.5, width=0.5,
show.legend=F) +
theme_shape() +
facet_wrap(facets='var', scales = 'free_y') +
labs(x=NULL, y=NULL, title='Scored results by person')
ggsave(file.path(plot_dir, 'bias-point-plot.png'), plot=p1,
width=7, height=6, dpi=300, scale=1.2)
# plotting distribution of relative differences - overall pretty well centered
# at 0
p2 <- diff_tab %>%
dplyr::select(-person, -value) %>%
distinct() %>%
ggplot(aes(y = relv_diff, x = var, colour=var)) +
geom_hline(aes(yintercept=0), linetype='dashed', alpha=0.6) +
geom_boxplot(fill=NA) +
geom_jitter(alpha=0.6) +
theme_shape() +
guides(colour='none') +
labs(x = NULL, y=NULL, title='Distribution of % differences')
ggsave(file.path(plot_dir, 'bias-reltv-diffs.png'), plot=p2,
width=7, height=5, dpi=300, scale=1.2)
# Creating a combined mosaic to synthesize both results
mosaic <- p1/p2 + plot_layout(heights = c(2,1))
ggsave(file.path(plot_dir, 'bias-analysis.png'), plot=mosaic,
width=7, height=7, dpi=300, scale=1.2)
